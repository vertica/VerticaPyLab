{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../src/index.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { create } from \"./index\";\n\ndescribe(\"free style\", () => {\n  it(\"output hashed class names\", () => {\n    const Style = create();\n    let changeId = Style.changeId;\n\n    const className = Style.registerStyle({\n      color: \"red\"\n    });\n\n    expect(Style.getStyles()).toEqual(`.${className}{color:red}`);\n    expect(Style.changeId).not.toEqual(changeId);\n  });\n\n  it(\"multiple values\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      background: [\"red\", \"linear-gradient(to right, red 0%, green 100%)\"]\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{background:red;background:linear-gradient(to right, red 0%, green 100%)}`\n    );\n  });\n\n  it(\"dash-case property names\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      backgroundColor: \"red\"\n    });\n\n    expect(Style.getStyles()).toEqual(`.${className}{background-color:red}`);\n  });\n\n  it(\"nest @-rules\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      color: \"red\",\n      \"@media (min-width: 500px)\": {\n        color: \"blue\"\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{color:red}@media (min-width: 500px){.${className}{color:blue}}`\n    );\n  });\n\n  it(\"interpolate selectors\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      color: \"red\",\n      \"& > &\": {\n        color: \"blue\",\n        \".class-name\": {\n          background: \"green\"\n        }\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{color:red}.${className} > .${className}{color:blue}` +\n        `.${className} > .${className} .class-name{background:green}`\n    );\n  });\n\n  it('do not append \"px\" to whitelist properties', () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      flexGrow: 2,\n      WebkitFlexGrow: 2\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{-webkit-flex-grow:2;flex-grow:2}`\n    );\n  });\n\n  it(\"merge exactly duplicate styles\", () => {\n    const Style = create();\n    let changeId = Style.changeId;\n\n    const className1 = Style.registerStyle({\n      background: \"blue\",\n      color: \"red\"\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n\n    // Checking the duplicate style _does not_ trigger a \"change\".\n    changeId = Style.changeId;\n\n    const className2 = Style.registerStyle({\n      color: \"red\",\n      background: \"blue\"\n    });\n\n    expect(Style.changeId).toEqual(changeId);\n    expect(className1).toEqual(className2);\n    expect(Style.getStyles()).toEqual(\n      `.${className1}{background:blue;color:red}`\n    );\n  });\n\n  it(\"allow debug css prefixes\", () => {\n    const Style = create();\n    let changeId = Style.changeId;\n\n    const className1 = Style.registerStyle({\n      color: \"red\",\n      $displayName: \"className1\"\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n\n    changeId = Style.changeId;\n\n    const className2 = Style.registerStyle({\n      color: \"red\",\n      $displayName: \"className2\"\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n    expect(className1).not.toEqual(className2);\n    expect(Style.getStyles()).toEqual(\n      `.${className1},.${className2}{color:red}`\n    );\n  });\n\n  it(\"sort keys by property name\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      border: \"5px solid red\",\n      borderWidth: 10,\n      borderColor: \"blue\"\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{border:5px solid red;border-color:blue;border-width:10px}`\n    );\n  });\n\n  it(\"sort keys alphabetically after hyphenating\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      borderRadius: 5,\n      msBorderRadius: 5\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{-ms-border-radius:5px;border-radius:5px}`\n    );\n  });\n\n  it(\"overloaded keys should stay sorted in insertion order\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      foo: [15, 13, 11, 9, 7, 5, 3, 1, 14, 12, 10, 8, 6, 4, 2]\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{foo:15px;foo:13px;foo:11px;foo:9px;foo:7px;foo:5px;foo:3px;foo:1px;foo:14px;foo:12px;foo:10px;foo:8px;foo:6px;foo:4px;foo:2px}`\n    );\n  });\n\n  it(\"merge duplicate nested style\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      color: \"red\",\n      \".foo\": {\n        color: \"red\"\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className},.${className} .foo{color:red}`\n    );\n  });\n\n  it(\"@-rules across multiple styles produce multiple rules\", () => {\n    const Style = create();\n    const mediaQuery = \"@media (min-width: 600px)\";\n    let changeId = Style.changeId;\n\n    const className1 = Style.registerStyle({\n      [mediaQuery]: {\n        color: \"red\"\n      }\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n\n    // Checking the next register _does_ trigger a change.\n    changeId = Style.changeId;\n\n    const className2 = Style.registerStyle({\n      [mediaQuery]: {\n        color: \"blue\"\n      }\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n\n    expect(Style.getStyles()).toEqual(\n      `@media (min-width: 600px){.${className1}{color:red}}@media (min-width: 600px){.${className2}{color:blue}}`\n    );\n  });\n\n  it(\"do not output empty styles\", () => {\n    const Style = create();\n\n    Style.registerStyle({\n      color: null\n    });\n\n    expect(Style.getStyles()).toEqual(\"\");\n  });\n\n  it(\"support @-rules within @-rules\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      \"@media (min-width: 100em)\": {\n        \"@supports (display: flexbox)\": {\n          maxWidth: 100\n        }\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `@media (min-width: 100em){@supports (display: flexbox){.${className}{max-width:100px}}}`\n    );\n  });\n\n  it(\"merge styles across instances\", () => {\n    const Style1 = create();\n    const Style2 = create();\n    const Style3 = create();\n\n    const className1 = Style1.registerStyle({\n      color: \"red\"\n    });\n\n    Style2.registerStyle({\n      // Should duplicate `className1`.\n      color: \"red\"\n    });\n\n    const className3 = Style3.registerStyle({\n      color: \"red\",\n      \"@media (max-width: 600px)\": {\n        color: \"blue\"\n      }\n    });\n\n    Style2.merge(Style3);\n    Style1.merge(Style2);\n\n    expect(Style1.getStyles()).toEqual(\n      `.${className1}{color:red}.${className3}{color:red}@media (max-width: 600px){.${className3}{color:blue}}`\n    );\n\n    Style1.unmerge(Style2);\n\n    expect(Style1.getStyles()).toEqual(`.${className1}{color:red}`);\n  });\n\n  it(\"keyframes\", () => {\n    const Style = create();\n\n    const keyframes = Style.registerKeyframes({\n      from: { color: \"red\" },\n      to: { color: \"blue\" }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `@keyframes ${keyframes}{from{color:red}to{color:blue}}`\n    );\n  });\n\n  it(\"merge duplicate keyframes\", () => {\n    const Style = create();\n\n    const keyframes1 = Style.registerKeyframes({\n      from: { color: \"red\" },\n      to: { color: \"blue\" }\n    });\n\n    const keyframes2 = Style.registerKeyframes({\n      to: { color: \"blue\" },\n      from: { color: \"red\" }\n    });\n\n    expect(keyframes1).toEqual(keyframes2);\n\n    expect(Style.getStyles()).toEqual(\n      `@keyframes ${keyframes1}{from{color:red}to{color:blue}}`\n    );\n  });\n\n  it(\"register arbitrary at rule\", () => {\n    const Style = create();\n    let changeId = Style.changeId;\n\n    Style.registerRule(\"@font-face\", {\n      fontFamily: '\"Bitstream Vera Serif Bold\"',\n      src: 'url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")'\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n\n    expect(Style.getStyles()).toEqual(\n      '@font-face{font-family:\"Bitstream Vera Serif Bold\";' +\n        'src:url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")}'\n    );\n  });\n\n  it(\"does not merge arbitrary at rules with different styles\", () => {\n    const Style = create();\n\n    Style.registerRule(\"@font-face\", {\n      fontFamily: '\"Bitstream Vera Serif Bold\"',\n      src: 'url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")'\n    });\n\n    Style.registerRule(\"@font-face\", {\n      fontFamily: '\"MyWebFont\"',\n      src: 'url(\"myfont.woff2\")'\n    });\n\n    expect(Style.getStyles()).toEqual(\n      '@font-face{font-family:\"Bitstream Vera Serif Bold\";' +\n        'src:url(\"https://mdn.mozillademos.org/files/2468/VeraSeBd.ttf\")}' +\n        '@font-face{font-family:\"MyWebFont\";src:url(\"myfont.woff2\")}'\n    );\n  });\n\n  it(\"register base rule\", () => {\n    const Style = create();\n\n    Style.registerRule(\"body\", {\n      margin: 0,\n      padding: 0\n    });\n\n    expect(Style.getStyles()).toEqual(\"body{margin:0;padding:0}\");\n  });\n\n  it(\"register at rule with nesting\", () => {\n    const Style = create();\n\n    Style.registerRule(\"@media print\", {\n      body: {\n        color: \"red\"\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\"@media print{body{color:red}}\");\n  });\n\n  it(\"de-dupe across styles and rules\", () => {\n    const Style = create();\n    let changeId = Style.changeId;\n\n    const className1 = Style.registerStyle({\n      color: \"red\"\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n    changeId = Style.changeId;\n\n    Style.registerRule(\".test\", {\n      color: \"red\"\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n    expect(Style.getStyles()).toEqual(`.${className1},.test{color:red}`);\n  });\n\n  it(\"retain insertion order\", () => {\n    const Style = create();\n\n    const x = Style.registerStyle({\n      background: \"red\",\n      \"@media (min-width: 400px)\": {\n        background: \"yellow\"\n      }\n    });\n\n    const y = Style.registerStyle({\n      background: \"palegreen\",\n      \"@media (min-width: 400px)\": {\n        background: \"pink\"\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${x}{background:red}@media (min-width: 400px){.${x}{background:yellow}}` +\n        `.${y}{background:palegreen}@media (min-width: 400px){.${y}{background:pink}}`\n    );\n  });\n\n  it(\"retain nested param order\", () => {\n    const Style = create();\n    let changeId = Style.changeId;\n\n    const className = Style.registerStyle({\n      width: \"20rem\",\n      \"@media screen and (min-width: 500px)\": {\n        width: 500\n      },\n      \"@media screen and (min-width: 1000px)\": {\n        width: 1000\n      }\n    });\n\n    expect(Style.changeId).not.toEqual(changeId);\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{width:20rem}@media screen and (min-width: 500px){.${className}{width:500px}}` +\n        `@media screen and (min-width: 1000px){.${className}{width:1000px}}`\n    );\n  });\n\n  it(\"should work with properties and nested styles in a single rule\", () => {\n    const Style = create();\n\n    Style.registerRule(\"body\", {\n      height: \"100%\",\n      a: {\n        color: \"red\"\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\"body{height:100%}body a{color:red}\");\n  });\n\n  it(\"should interpolate recursively with a rule\", () => {\n    const Style = create();\n\n    Style.registerRule(\"body\", {\n      height: \"100%\",\n      a: {\n        color: \"red\"\n      },\n      \"@print\": {\n        a: {\n          color: \"blue\"\n        }\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      \"body{height:100%}body a{color:red}@print{body a{color:blue}}\"\n    );\n  });\n\n  it(\"disable style de-dupe\", () => {\n    const Style = create();\n\n    const className = Style.registerStyle({\n      color: \"blue\",\n      \"&::-webkit-input-placeholder\": {\n        color: `rgba(0, 0, 0, 0)`,\n        $unique: true\n      },\n      \"&::-moz-placeholder\": {\n        color: `rgba(0, 0, 0, 0)`,\n        $unique: true\n      },\n      \"&::-ms-input-placeholder\": {\n        color: `rgba(0, 0, 0, 0)`,\n        $unique: true\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      `.${className}{color:blue}` +\n        `.${className}::-webkit-input-placeholder{color:rgba(0, 0, 0, 0)}` +\n        `.${className}::-moz-placeholder{color:rgba(0, 0, 0, 0)}` +\n        `.${className}::-ms-input-placeholder{color:rgba(0, 0, 0, 0)}`\n    );\n  });\n\n  it(\"register a css object\", () => {\n    const Style = create();\n\n    Style.registerCss({\n      body: {\n        color: \"red\",\n        \"@print\": {\n          color: \"blue\"\n        }\n      },\n      h1: {\n        color: \"red\",\n        \"@print\": {\n          color: \"#000\",\n          a: {\n            color: \"blue\"\n          }\n        }\n      }\n    });\n\n    expect(Style.getStyles()).toEqual(\n      \"body,h1{color:red}@print{body,h1 a{color:blue}h1{color:#000}}\"\n    );\n  });\n\n  it(\"registering a hashed rule\", () => {\n    const Style = create();\n\n    const animation1 = Style.registerHashRule(\"@keyframes\", {\n      from: {\n        color: \"blue\"\n      },\n      to: {\n        color: \"red\"\n      }\n    });\n\n    const animation2 = Style.registerHashRule(\"@-webkit-keyframes\", {\n      from: {\n        color: \"blue\"\n      },\n      to: {\n        color: \"red\"\n      }\n    });\n\n    expect(animation1).toEqual(animation2);\n\n    expect(Style.getStyles()).toEqual(\n      `@keyframes ${animation1}{from{color:blue}to{color:red}}@-webkit-keyframes ${animation2}{from{color:blue}to{color:red}}`\n    );\n  });\n\n  it(\"change events\", () => {\n    const styles: string[] = [];\n\n    const Style = create({\n      add(style, index) {\n        styles.splice(index, 0, style.getStyles());\n      },\n      change(style, oldIndex, newIndex) {\n        styles.splice(oldIndex, 1);\n        styles.splice(newIndex, 0, style.getStyles());\n      },\n      remove(_, index) {\n        styles.splice(index, 1);\n      }\n    });\n\n    Style.registerStyle({\n      background: \"red\",\n      \"@media (min-width: 400px)\": {\n        background: \"yellow\"\n      }\n    });\n\n    Style.registerStyle({\n      background: \"palegreen\",\n      \"@media (min-width: 400px)\": {\n        background: \"pink\"\n      }\n    });\n\n    expect(styles.join(\"\")).toEqual(Style.getStyles());\n  });\n\n  it(\"escape css selectors\", () => {\n    const Style = create();\n    const $displayName = \"Connect(App)\";\n\n    const animationName = Style.registerKeyframes({\n      from: { color: \"red\" },\n      $displayName\n    });\n\n    const className = Style.registerStyle({\n      animation: animationName,\n      \".t\": { color: \"red\" },\n      $displayName\n    });\n\n    expect(animationName.startsWith($displayName)).toBe(true);\n    expect(className.startsWith($displayName)).toBe(true);\n\n    expect(Style.getStyles()).toEqual(\n      `@keyframes ${animationName.replace(/[()]/g, \"\\\\$&\")}{from{color:red}}` +\n        `.${className.replace(\n          /[()]/g,\n          \"\\\\$&\"\n        )}{animation:Connect(App)_ftl4afb}` +\n        `.${className.replace(/[()]/g, \"\\\\$&\")} .t{color:red}`\n    );\n  });\n\n  it(\"should clone a new style instance\", () => {\n    const Style = create();\n\n    Style.registerStyle({ color: \"red\" });\n\n    const Style2 = Style.clone();\n\n    expect(Style.getStyles()).toEqual(Style2.getStyles());\n\n    Style2.registerStyle({ color: \"blue\" });\n\n    expect(Style.getStyles()).not.toEqual(Style2.getStyles());\n  });\n\n  describe(\"production\", () => {\n    const PREV_NODE_ENV = process.env.NODE_ENV;\n\n    beforeAll(() => {\n      process.env.NODE_ENV = \"production\";\n    });\n\n    afterAll(() => {\n      process.env.NODE_ENV = PREV_NODE_ENV;\n    });\n\n    it('ignore debug prefixes in \"production\"', () => {\n      const Style = create(undefined);\n      let changeId = Style.changeId;\n\n      const className1 = Style.registerStyle({\n        color: \"red\",\n        $displayName: \"className1\"\n      });\n\n      expect(Style.changeId).not.toEqual(changeId);\n\n      changeId = Style.changeId;\n\n      const className2 = Style.registerStyle({\n        color: \"red\",\n        $displayName: \"className2\"\n      });\n\n      expect(Style.changeId).toEqual(changeId);\n      expect(className1).toEqual(className2);\n      expect(Style.getStyles()).toEqual(`.${className1}{color:red}`);\n    });\n  });\n});\n"]}