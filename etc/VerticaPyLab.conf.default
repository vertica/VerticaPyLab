# This is sourced by VerticaPyLab bash scripts to set up a consitant
# environment for starting containers

#
# VerticaPyLab container (ML development environment)
#
VERTICAPYLAB_CONTAINER_NAME=verticapylab
VERTICAPYLAB_IMG=verticapy-jupyterlab
VERTICAPYLAB_IMG_VERSION=v0.2.0
VERTICAPYLAB_PORT=8889 # Optionally set VERTICALAB_PORT=RANDOM
VERTICAPYLAB_BIND_ADDRESS=127.0.0.1 # change to 0.0.0.0 if you want to connect from a remote
PYTHON_VERSION=3.10.13-slim-bullseye

#
# Vertica server
#
VERTICA_PORT=5433
VERTICA_SSH_PORT=5432 # ssh localhost -l 5432
VERTICA_BIND_ADDRESS=127.0.0.1 # change to 0.0.0.0 if you want to connect from a remote
VERTICA_CONTAINER_NAME=verticadb
VERTICA_HOST_NAME=$VERTICA_CONTAINER_NAME
VERTICA_DB_NAME=$VERTICA_CONTAINER_NAME
DB_NAME=demo
VERTICA_DOCKER_IMAGE=opentext/vertica-k8s:24.1.0-0-minimal # see https://hub.docker.com/r/vertica/vertica-k8s
VSQL_USER=dbadmin
#VERTICA_RUNARGS+=( ) # add more args to the docker run command

#
# Docker
#
DOCKER_NETWORK=demo

#
# Grafana
#
GF_VERSION=9.5.1
GF_VERTICA_PLUGIN_VERSION=2.1.0
# Do not change this variable unless you want to run grafana on a diffrent port
# either as standalone or together with VerticaPyLab(in this case you need to run
# `make verticapylab-build` to create a custom image)
GF_PORT=3000

#
# Spark
#
SPARK_VERSION=3.3.2

#
# Prometheus
#
PROM_VERSION=v2.48.0
PROM_VOLUME=prometheus-data

#
# Other
#
